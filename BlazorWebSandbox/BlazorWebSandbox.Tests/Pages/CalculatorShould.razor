@using BlazorWebSandbox.Pages
@attribute [TestClass]
@inherits BunitTestContext

@code {
    IRenderedFragment UnderTest;

    [TestInitialize]
    public void Initialize()
    {
		UnderTest = Render(@<Calculator />);
	}

    [TestMethod]
	public void Show_calculator_header()
	{
		UnderTest.Find("h1").MarkupMatches(@<h1>Calculator</h1>);
	}

    [TestMethod]
	public void Show_0_in_display()
	{
		UnderTest.Find("p#displayValue").MarkupMatches(@<p id="displayValue">0</p>);
	}

    [TestMethod]
	[DataRow("one", "1")]
	[DataRow("two", "2")]
	[DataRow("three", "3")]
	[DataRow("four", "4")]
	[DataRow("five", "5")]
	[DataRow("six", "6")]
	[DataRow("seven", "7")]
	[DataRow("eight", "8")]
	[DataRow("nine", "9")]
	[DataRow("zero", "0")]
	public void Show_a_button_for_expected_number(string elementId, string expected)
	{
		var buttonValue = UnderTest.Find($"button#{elementId}").InnerHtml;

		Assert.AreEqual(expected, buttonValue);
	}
	
    [TestMethod]
	[DataRow("plus", "+")]
	[DataRow("equals", "=")]
	[DataRow("minus", "-")]
	[DataRow("clear", "C")]
	public void Show_a_button_for_expected_command(string elementId, string expected)
	{
		var buttonValue = UnderTest.Find($"button#{elementId}").InnerHtml;

		Assert.AreEqual(expected, buttonValue);
	}

	[TestMethod]
	[DataRow("one", "1")]
	[DataRow("two", "2")]
	[DataRow("three", "3")]
	[DataRow("four", "4")]
	[DataRow("five", "5")]
	[DataRow("six", "6")]
	[DataRow("seven", "7")]
	[DataRow("eight", "8")]
	[DataRow("nine", "9")]
	[DataRow("zero", "0")]
	public void Set_display_to_expected(string elementId, string expected)
	{
		UnderTest.Find($"button#{elementId}").Click();

		var displayValue = UnderTest.Find("p#displayValue").InnerHtml;

		Assert.AreEqual(expected, displayValue);
	}

	[TestMethod]
	public void Set_display_to_11()
	{
		UnderTest.Find("button#one").Click();
		UnderTest.Find("button#one").Click();

		UnderTest.Find("p#displayValue").MarkupMatches(@<p id="displayValue">11</p>);
	}

	[TestMethod]
	public void Reset_display_value_after_clicking_plus()
	{
		UnderTest.Find($"button#one").Click();

		UnderTest.Find($"button#plus").Click();

		UnderTest.Find("p#displayValue").MarkupMatches(@<p id="displayValue">0</p>);
	}

	[TestMethod]
	public void Display_the_same_value_after_clicking_equals()
	{
		UnderTest.Find($"button#one").Click();

		UnderTest.Find($"button#equals").Click();
		
		var displayValue = UnderTest.Find("p#displayValue").InnerHtml;
		Assert.AreEqual("1", displayValue);
	}

	[TestMethod]
	public void Display_the_result_of_one_plus_one()
	{
		UnderTest.Find($"button#one").Click();
		UnderTest.Find($"button#plus").Click();
		UnderTest.Find($"button#one").Click();
		UnderTest.Find($"button#equals").Click();
		
		var displayValue = UnderTest.Find("p#displayValue").InnerHtml;
		Assert.AreEqual("2", displayValue);
	}

	[TestMethod]
	public void Display_the_result_of_one_plus_two_plus_three()
	{
		UnderTest.Find($"button#one").Click();
		UnderTest.Find($"button#plus").Click();
		UnderTest.Find($"button#two").Click();
		UnderTest.Find($"button#plus").Click();
		UnderTest.Find($"button#three").Click();
		UnderTest.Find($"button#equals").Click();
		
		var displayValue = UnderTest.Find("p#displayValue").InnerHtml;
		Assert.AreEqual("6", displayValue);
	}

	[TestMethod]
	public void Display_one_when_one_is_clicked_after_the_equals_command()
	{
		UnderTest.Find($"button#one").Click();
		UnderTest.Find($"button#plus").Click();
		UnderTest.Find($"button#two").Click();
		UnderTest.Find($"button#equals").Click();

		UnderTest.Find($"button#one").Click();
		
		var displayValue = UnderTest.Find("p#displayValue").InnerHtml;
		Assert.AreEqual("1", displayValue);
	}

	[TestMethod]
	public void Continue_plus_equation_when_plus_is_clicked_following_equals_command()
	{
		UnderTest.Find($"button#one").Click();
		UnderTest.Find($"button#plus").Click();
		UnderTest.Find($"button#two").Click();
		UnderTest.Find($"button#equals").Click();

		UnderTest.Find($"button#plus").Click();
		UnderTest.Find($"button#three").Click();
		UnderTest.Find($"button#equals").Click();
		
		var displayValue = UnderTest.Find("p#displayValue").InnerHtml;
		Assert.AreEqual("6", displayValue);
	}
}
